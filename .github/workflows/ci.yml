name: CI/CD Pipeline
permissions:
  contents: read
  pull-requests: write
  checks: write

# Trigger the workflow on push and pull requests to main branch
on:
    push:
        branches: [main, develop]
    pull_request:
        branches: [main, develop]

jobs:
    # Frontend job - runs in parallel with backend
    frontend:
        name: Frontend (Lint, Test, Build)
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [22.16]

        steps:
            # Step 1: Checkout the repository
            - name: Checkout repository
              uses: actions/checkout@v4

            # Step 2: Setup Node.js
            - name: Setup Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'npm'
                  cache-dependency-path: './package-lock.json'

            # Step 3: Install all dependencies (root + workspaces)
            - name: Install dependencies
              run: npm ci

            # Step 4: Run frontend linting via workspace
            - name: Run ESLint (Frontend)
              run: npm run lint -w client
              continue-on-error: false

            # Step 5: Run frontend tests with coverage
            - name: Run frontend tests with coverage
              run: npm run test:coverage -w client

            # Step 6: Upload frontend coverage to Codecov
            - name: Upload frontend coverage to Codecov
              uses: codecov/codecov-action@v5
              with:
                  token: ${{ secrets.CODECOV_TOKEN }}
                  files: ./client/coverage/lcov.info
                  flags: frontend
                  name: codecov-frontend
                  fail_ci_if_error: false
                  verbose: true

            # Step 7: Upload frontend test results to Codecov
            - name: Upload frontend test results to Codecov
              if: ${{ !cancelled() }}
              uses: codecov/test-results-action@v1
              with:
                  token: ${{ secrets.CODECOV_TOKEN }} # From GitHub secrets

            # Step 8: Build frontend project with CodeCov bundle analysis
            - name: Build frontend project
              env:
                  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
                  CI: true
              run: npm run build -w client

            # Step 9: Cache frontend build artifacts
            - name: Cache frontend build
              uses: actions/cache@v4
              with:
                  path: ./client/dist
                  key: ${{ runner.os }}-frontend-build-${{ hashFiles('./package-lock.json') }}-${{ hashFiles('./client/package-lock.json') }}

    # Backend job - independent workspace
    backend:
        name: Backend (Lint, Test, Build)
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [22.16]

        steps:
            # Step 1: Checkout the repository
            - name: Checkout repository
              uses: actions/checkout@v4

            # Step 2: Setup Node.js
            - name: Setup Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'npm'
                  cache-dependency-path: './package-lock.json'

            # Step 3: Install all dependencies (root + workspaces)
            - name: Install dependencies
              run: npm ci

            # Step 4: Run backend linting
            - name: Run ESLint (Backend)
              run: npm run lint -w server
              continue-on-error: false

            # Step 5: Run backend tests (when available)
            - name: Run backend tests with coverage
              run: npm run test:coverage -w server || echo "No backend tests yet"
              continue-on-error: true # To be changed, eventually

            # Step 6: Upload backend coverage (when available)
            - name: Upload backend coverage to Codecov
              uses: codecov/codecov-action@v5
              if: hashFiles('./server/coverage/lcov.info') != ''
              with:
                  token: ${{ secrets.CODECOV_TOKEN }}
                  files: ./server/coverage/lcov.info
                  flags: backend
                  name: codecov-backend
                  fail_ci_if_error: false
                  verbose: true

            # Step 7: Start backend to verify it works
            - name: Verify backend starts
              run: |
                  timeout 10s npm run dev -w server || echo "Backend verification complete"
              continue-on-error: true

    # Deploy job - only runs if all jobs pass
    deploy:
        name: Deploy
        runs-on: ubuntu-latest
        needs: [frontend, backend]
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 22.16
                  cache: 'npm'
                  cache-dependency-path: './package-lock.json'

            - name: Install dependencies
              run: npm ci

            - name: Build for production
              run: npm run build

            - name: Deploy application
              run:
                  echo "Deploy steps would go here"
                  # Add your actual deployment logic here
